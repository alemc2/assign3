require 'nngraph'
require 'nn';
-- Part (a)
a = nn.Linear(4,2)()
a1 = nn.Power(2)(a)
a2 = nn.Tanh()(a1)
b = nn.Linear(5,2)()
b1 = nn.Power(2)(b)
b2 = nn.Sigmoid()(b1)
c = nn.CMulTable()({a2,b2})
d = nn.Identity()()
e = nn.CAddTable()({c,d})
q1 = nn.gModule({a,b,d},{e})

--Part (b)
x = torch.randn(4)
y = torch.randn(5)
z = torch.randn(2)
fwd = q1:forward({x,y,z})
print('forwarded value is:')
print(fwd)
bck = q1:backward({x,y,z},torch.ones(2))
print('bakwarded vaue are:')
print('d OUT/d x =')
print(bck[1])
print('d OUT/d y =')
print(bck[2])
print('d OUT/d z =')
print(bck[3])
